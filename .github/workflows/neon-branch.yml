name: Create/Delete Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
    outputs:
      db_url: ${{ steps.create_neon_branch.outputs.db_url }}
      db_url_with_pooler: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef --version 8.0.8
          
      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Restore dependencies
        run: dotnet restore ./MedicalWebApp.csproj
        
      - name: Build application
        run: dotnet build ./MedicalWebApp.csproj --no-restore
        
      - name: Run Database Migrations
        run: dotnet ef database update --context MedicalDbContext --project ./MedicalWebApp.csproj
        env:
          ASPNETCORE_ENVIRONMENT: Production
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
          
      - name: Seed Sample Data (Optional)
        run: |
          echo "Creating sample patient data for PR testing..."
          # You can add sample data insertion here if needed
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
          
      - name: Post Schema Diff Comment to PR
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## üìã Database Schema Status
            
            ‚úÖ **Database migrations applied successfully**
            - Branch: \`preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}\`
            - Medical database schema is ready for testing
            - Patient and Appointment tables created
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          
      - name: Comment PR with Database Info
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## üóÑÔ∏è Database Branch Created
            
            A new Neon database branch has been created for this PR:
            - **Branch Name**: \`preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}\`
            - **Status**: ‚úÖ Ready for testing
            - **Migrations**: Applied successfully
            
            ### üè• Medical App Testing
            Your medical web application is now connected to an isolated database branch. You can:
            - Test patient registration without affecting production data
            - Verify database schema changes
            - Run integration tests safely
            
            The database will be automatically deleted when this PR is closed.
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}
          
      - name: Comment PR with Cleanup Info
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## üóëÔ∏è Database Branch Cleaned Up
            
            The Neon database branch for this PR has been deleted:
            - **Branch Name**: \`preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}\`
            - **Status**: ‚úÖ Successfully removed
            
            All test data and schema changes from this PR have been cleaned up.
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
